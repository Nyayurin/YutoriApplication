name: Package
on:
  push:
    branches: [ master ]
jobs:
  package-android:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
      - uses: gradle/actions/setup-gradle@v4
      - id: version
        run: echo "::set-output name=version::$(date +'%y.%m.%d')"
      - run: chmod +x ./gradlew
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > application/YutoriApplication.jks
      - name: Package androidRelease
        run: ./gradlew :application:assembleRelease
        env:
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.version.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: androidRelease
          path: application/build/outputs/apk/release/application-release.apk
  package-windows:
    runs-on: windows-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
      - uses: gradle/actions/setup-gradle@v4
      - id: version
        run: echo "::set-output name=version::$(date +'%y.%m.%d')"
      - run: chmod +x ./gradlew
      - name: package windowsAppImage
        run: ./gradlew :application:packageReleaseAppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.version.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: windowsAppImage
          path: application/build/compose/binaries/main-release/app/Yutori\ Application
      - name: package windowsMsi
        run: ./gradlew :application:packageReleaseMsi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.version.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: windowsMsi
          path: application/build/compose/binaries/main-release/msi/*
      - name: package windowsUberJar
        run: ./gradlew :application:packageReleaseUberJarForCurrentOS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.version.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: windowsUberJar
          path: application/build/compose/jars/*
  package-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
      - uses: gradle/actions/setup-gradle@v4
      - id: version
        run: echo "::set-output name=version::$(date +'%y.%m.%d')"
      - run: chmod +x ./gradlew
      - name: package linuxAppImage
        run: ./gradlew :application:packageReleaseAppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.version.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: linuxAppImage
          path: application/build/compose/binaries/main-release/app/Yutori\ Application
      - name: package linuxDeb
        run: ./gradlew :application:packageReleaseDeb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.version.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: linuxDeb
          path: application/build/compose/binaries/main-release/deb/*
      - name: package linuxUberJar
        run: ./gradlew :application:packageReleaseUberJarForCurrentOS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.version.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: linuxUberJar
          path: application/build/compose/jars/*
  package-macos:
    runs-on: macos-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
      - uses: gradle/actions/setup-gradle@v4
      - id: version
        run: echo "::set-output name=version::$(date +'%y.%m.%d')"
      - run: chmod +x ./gradlew
      - name: package macosAppImage
        run: ./gradlew :application:packageReleaseAppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.version.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: macosAppImage
          path: application/build/compose/binaries/main-release/app/Yutori\ Application
      - name: package macosDmg
        run: ./gradlew :application:packageReleaseDmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.version.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: macosDmg
          path: application/build/compose/binaries/main-release/dmg/*
      - name: package macosUberJar
        run: ./gradlew :application:packageReleaseUberJarForCurrentOS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.version.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: macosUberJar
          path: application/build/compose/jars/*